#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Controller
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_QuanLyNhanVien")]
	public partial class DB_QuanLyNhanVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttAccount(tAccount instance);
    partial void UpdatetAccount(tAccount instance);
    partial void DeletetAccount(tAccount instance);
    partial void InserttStaff(tStaff instance);
    partial void UpdatetStaff(tStaff instance);
    partial void DeletetStaff(tStaff instance);
    partial void InserttRoom(tRoom instance);
    partial void UpdatetRoom(tRoom instance);
    partial void DeletetRoom(tRoom instance);
    #endregion
		
		public DB_QuanLyNhanVienDataContext() : 
				base(global::Data.Properties.Settings.Default.DB_QuanLyNhanVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QuanLyNhanVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QuanLyNhanVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QuanLyNhanVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QuanLyNhanVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tAccount> tAccounts
		{
			get
			{
				return this.GetTable<tAccount>();
			}
		}
		
		public System.Data.Linq.Table<tStaff> tStaffs
		{
			get
			{
				return this.GetTable<tStaff>();
			}
		}
		
		public System.Data.Linq.Table<tRoom> tRooms
		{
			get
			{
				return this.GetTable<tRoom>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tAccount")]
	public partial class tAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Account;
		
		private string _Username;
		
		private string _Password;
		
		private string _Type;
		
		private System.Nullable<bool> _Account_Status;
		
		private EntitySet<tStaff> _tStaffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AccountChanging(int value);
    partial void OnId_AccountChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAccount_StatusChanging(System.Nullable<bool> value);
    partial void OnAccount_StatusChanged();
    #endregion
		
		public tAccount()
		{
			this._tStaffs = new EntitySet<tStaff>(new Action<tStaff>(this.attach_tStaffs), new Action<tStaff>(this.detach_tStaffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Account", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Account
		{
			get
			{
				return this._Id_Account;
			}
			set
			{
				if ((this._Id_Account != value))
				{
					this.OnId_AccountChanging(value);
					this.SendPropertyChanging();
					this._Id_Account = value;
					this.SendPropertyChanged("Id_Account");
					this.OnId_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Status", DbType="Bit")]
		public System.Nullable<bool> Account_Status
		{
			get
			{
				return this._Account_Status;
			}
			set
			{
				if ((this._Account_Status != value))
				{
					this.OnAccount_StatusChanging(value);
					this.SendPropertyChanging();
					this._Account_Status = value;
					this.SendPropertyChanged("Account_Status");
					this.OnAccount_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tStaff", Storage="_tStaffs", ThisKey="Id_Account", OtherKey="Id_Account")]
		public EntitySet<tStaff> tStaffs
		{
			get
			{
				return this._tStaffs;
			}
			set
			{
				this._tStaffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tStaffs(tStaff entity)
		{
			this.SendPropertyChanging();
			entity.tAccount = this;
		}
		
		private void detach_tStaffs(tStaff entity)
		{
			this.SendPropertyChanging();
			entity.tAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStaff")]
	public partial class tStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Staff;
		
		private string _Staff_Name;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Gender;
		
		private System.Nullable<int> _Id_Account;
		
		private System.Nullable<int> _Id_Room;
		
		private System.Nullable<bool> _Staff_Status;
		
		private EntityRef<tAccount> _tAccount;
		
		private EntityRef<tRoom> _tRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_StaffChanging(int value);
    partial void OnId_StaffChanged();
    partial void OnStaff_NameChanging(string value);
    partial void OnStaff_NameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnId_AccountChanging(System.Nullable<int> value);
    partial void OnId_AccountChanged();
    partial void OnId_RoomChanging(System.Nullable<int> value);
    partial void OnId_RoomChanged();
    partial void OnStaff_StatusChanging(System.Nullable<bool> value);
    partial void OnStaff_StatusChanged();
    #endregion
		
		public tStaff()
		{
			this._tAccount = default(EntityRef<tAccount>);
			this._tRoom = default(EntityRef<tRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Staff", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Staff
		{
			get
			{
				return this._Id_Staff;
			}
			set
			{
				if ((this._Id_Staff != value))
				{
					this.OnId_StaffChanging(value);
					this.SendPropertyChanging();
					this._Id_Staff = value;
					this.SendPropertyChanged("Id_Staff");
					this.OnId_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Name", DbType="NVarChar(50)")]
		public string Staff_Name
		{
			get
			{
				return this._Staff_Name;
			}
			set
			{
				if ((this._Staff_Name != value))
				{
					this.OnStaff_NameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Name = value;
					this.SendPropertyChanged("Staff_Name");
					this.OnStaff_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Account", DbType="Int")]
		public System.Nullable<int> Id_Account
		{
			get
			{
				return this._Id_Account;
			}
			set
			{
				if ((this._Id_Account != value))
				{
					if (this._tAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AccountChanging(value);
					this.SendPropertyChanging();
					this._Id_Account = value;
					this.SendPropertyChanged("Id_Account");
					this.OnId_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Room", DbType="Int")]
		public System.Nullable<int> Id_Room
		{
			get
			{
				return this._Id_Room;
			}
			set
			{
				if ((this._Id_Room != value))
				{
					if (this._tRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RoomChanging(value);
					this.SendPropertyChanging();
					this._Id_Room = value;
					this.SendPropertyChanged("Id_Room");
					this.OnId_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Status", DbType="Bit")]
		public System.Nullable<bool> Staff_Status
		{
			get
			{
				return this._Staff_Status;
			}
			set
			{
				if ((this._Staff_Status != value))
				{
					this.OnStaff_StatusChanging(value);
					this.SendPropertyChanging();
					this._Staff_Status = value;
					this.SendPropertyChanged("Staff_Status");
					this.OnStaff_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tStaff", Storage="_tAccount", ThisKey="Id_Account", OtherKey="Id_Account", IsForeignKey=true)]
		public tAccount tAccount
		{
			get
			{
				return this._tAccount.Entity;
			}
			set
			{
				tAccount previousValue = this._tAccount.Entity;
				if (((previousValue != value) 
							|| (this._tAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tAccount.Entity = null;
						previousValue.tStaffs.Remove(this);
					}
					this._tAccount.Entity = value;
					if ((value != null))
					{
						value.tStaffs.Add(this);
						this._Id_Account = value.Id_Account;
					}
					else
					{
						this._Id_Account = default(Nullable<int>);
					}
					this.SendPropertyChanged("tAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tRoom_tStaff", Storage="_tRoom", ThisKey="Id_Room", OtherKey="Id_Room", IsForeignKey=true)]
		public tRoom tRoom
		{
			get
			{
				return this._tRoom.Entity;
			}
			set
			{
				tRoom previousValue = this._tRoom.Entity;
				if (((previousValue != value) 
							|| (this._tRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tRoom.Entity = null;
						previousValue.tStaffs.Remove(this);
					}
					this._tRoom.Entity = value;
					if ((value != null))
					{
						value.tStaffs.Add(this);
						this._Id_Room = value.Id_Room;
					}
					else
					{
						this._Id_Room = default(Nullable<int>);
					}
					this.SendPropertyChanged("tRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tRoom")]
	public partial class tRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Room;
		
		private string _Room_Name;
		
		private System.Nullable<bool> _Room_Status;
		
		private EntitySet<tStaff> _tStaffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RoomChanging(int value);
    partial void OnId_RoomChanged();
    partial void OnRoom_NameChanging(string value);
    partial void OnRoom_NameChanged();
    partial void OnRoom_StatusChanging(System.Nullable<bool> value);
    partial void OnRoom_StatusChanged();
    #endregion
		
		public tRoom()
		{
			this._tStaffs = new EntitySet<tStaff>(new Action<tStaff>(this.attach_tStaffs), new Action<tStaff>(this.detach_tStaffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Room", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Room
		{
			get
			{
				return this._Id_Room;
			}
			set
			{
				if ((this._Id_Room != value))
				{
					this.OnId_RoomChanging(value);
					this.SendPropertyChanging();
					this._Id_Room = value;
					this.SendPropertyChanged("Id_Room");
					this.OnId_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Name", DbType="NVarChar(50)")]
		public string Room_Name
		{
			get
			{
				return this._Room_Name;
			}
			set
			{
				if ((this._Room_Name != value))
				{
					this.OnRoom_NameChanging(value);
					this.SendPropertyChanging();
					this._Room_Name = value;
					this.SendPropertyChanged("Room_Name");
					this.OnRoom_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Status", DbType="Bit")]
		public System.Nullable<bool> Room_Status
		{
			get
			{
				return this._Room_Status;
			}
			set
			{
				if ((this._Room_Status != value))
				{
					this.OnRoom_StatusChanging(value);
					this.SendPropertyChanging();
					this._Room_Status = value;
					this.SendPropertyChanged("Room_Status");
					this.OnRoom_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tRoom_tStaff", Storage="_tStaffs", ThisKey="Id_Room", OtherKey="Id_Room")]
		public EntitySet<tStaff> tStaffs
		{
			get
			{
				return this._tStaffs;
			}
			set
			{
				this._tStaffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tStaffs(tStaff entity)
		{
			this.SendPropertyChanging();
			entity.tRoom = this;
		}
		
		private void detach_tStaffs(tStaff entity)
		{
			this.SendPropertyChanging();
			entity.tRoom = null;
		}
	}
}
#pragma warning restore 1591
